## Docker Compose file for Vapor
##
## Install Docker on your system to run and test
## your Vapor app in a production-like environment.
##
## Note: This file is intended for testing and does not
## implement best practices for a production deployment.
##
## Learn more: https://docs.docker.com/compose/reference/
##
##   Build images: docker-compose build
##      Start app: docker-compose up app
##       Stop all: docker-compose down
##
#version: '3.7'
#
#x-shared_environment: &shared_environment
#  LOG_LEVEL: ${LOG_LEVEL:-debug}
#
#services:
#
#
#
#  app:
#    image: store-a-p-i:latest
#    build:
#      context: .
#    environment:
#      <<: *shared_environment
#    ports:
#      - '8080:8080'
#    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
#    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
#  migrate:
#    image: store-a-p-i:latest
#    build:
#      context: .
#    environment:
#      <<: *shared_environment
#    command: ["migrate", "--yes"]
#    deploy:
#      replicas: 0
#  revert:
#    image: store-a-p-i:latest
#    build:
#      context: .
#    environment:
#      <<: *shared_environment
#    command: ["migrate", "--revert", "--yes"]
#    deploy:
#      replicas: 0


# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
